@{
    ViewBag.Title = "Login";
}

@model Entity.Usuario
<div class="col-md-offset-3 col-md-6" style="margin-top: 10%">
    <!-- BEGIN SAMPLE FORM PORTLET-->
    <div class="portlet light ">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-share font-green-sharp"></i>
                <span class="caption-subject font-green-sharp bold uppercase">Login</span>
            </div>
        </div>
        @{
            bool isInvalid = ViewData.ModelState.ContainsKey("Invalido");
            string mensagem = ViewData?.ModelState["Invalido"]?.Errors[0]?.ErrorMessage;

            if (isInvalid)
            {
                <div class="alert alert-danger">
                    <button class="close" data-close="alert"></button>
                    <span>
                        @mensagem
                    </span>
                </div>
            }
        }
        <div class="portlet-body form">
            <form action="@Url.Action("Logar", "Login")" method="post" role="form">
                @Html.AntiForgeryToken()
                <div class="form-body">

                    <div class="form-group">
                        <label>Email</label>
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-envelope"></i>
                            </span>
                            <input value="@Model.Email" type="text" class="form-control" placeholder="Endereço de Email" name="usuario.Email">
                            @if (ViewData.ModelState.ContainsKey("Email"))
                            {
                                <span class="font-red-thunderbird"> @ViewData.ModelState["Email"].Errors[0].ErrorMessage</span>
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Senha</label>
                        <div class="input-group">
                            <input type="password" class="form-control" placeholder="Senha" name="usuario.Senha">
                            <span class="input-group-addon">
                                <i class="icon-key"></i>
                            </span>
                            @if (ViewData.ModelState.ContainsKey("Senha"))
                            {
                                <span class="font-red-thunderbird"> @ViewData.ModelState["Senha"].Errors[0].ErrorMessage</span>
                            }
                        </div>
                    </div>

                    <label><input id="lembrar-me" type="checkbox" name="lembrar">Lembrar-me</label>

                </div>
                <div class="form-actions">
                    <button type="button" class="btn purple-customizado-fraco default-roxocustomizadofraco btn-circle">Registrar</button>
                    <button id="botao" type="submit" class="btn purple-customizado default-roxocustomizado btn-circle pull-right">
                        Entrar &thinsp;
                        <i class="icon-login"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section JqueryFinal{
    <script>
        document.getElementById("botao").addEventListener("click", PegarBoolDoLembrarme);
        function PegarBoolDoLembrarme() {
            var chk = document.getElementById("lembrar-me");
            if (chk.checked) {
                chk.setAttribute("value", "true");
            }
        }
    </script>

    <script>
        jQuery(document).ready(function () {
            // initiate layout and plugins
            Metronic.init(); // init metronic core components
            Layout.init(); // init current layout
            Demo.init(); // init demo features
        });
    </script>
}
@*assets/admin/layout3/css/themes/default.css*@
@*assets/global/css/components-rounded.css*@
