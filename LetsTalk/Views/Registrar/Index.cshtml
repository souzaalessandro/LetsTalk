@{
    ViewBag.Title = "Registrar";
}
@model Entity.Usuario
@section PageLevelPluginStyles{
    <link rel="stylesheet" type="text/css" href="~/assets/global/plugins/select2/select2.css" />
    <link rel="stylesheet" type="text/css" href="~/assets/global/plugins/bootstrap-select/bootstrap-select.min.css" />
    <link rel="stylesheet" type="text/css" href="~/assets/global/plugins/select2/select2.css" />
    <link rel="stylesheet" type="text/css" href="~/assets/global/plugins/jquery-multi-select/css/multi-select.css" />
    <link rel="stylesheet" type="text/css" href="~/assets/global/plugins/select2/select2.css" />
    <link rel="stylesheet" type="text/css" href="~/assets/global/plugins/bootstrap-wysihtml5/bootstrap-wysihtml5.css" />
    <link rel="stylesheet" type="text/css" href="~/assets/global/plugins/bootstrap-markdown/css/bootstrap-markdown.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/global/plugins/bootstrap-datepicker/css/datepicker.css" />
}
<div class="col-md-offset-3 col-md-6">
    <div class="portlet light ">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-share" style="color: #582c6b"></i>
                <span class="caption-subject bold uppercase" style="color: #582c6b">Cadastro</span>
            </div>
        </div>
        <div class="portlet-body form">
            <form action="@Url.Action("Registrar", "Registrar")" method="post" role="form">
                @Html.AntiForgeryToken()
                <div class="form-body">
                    <div class="form-group">
                        <label>Nome</label>
                        <input value="@Model.Nome" type="text" class="form-control" placeholder="Digite seu nome" name="usuario.Nome">
                        @if (ViewData.ModelState.ContainsKey("Nome"))
                        {
                            <span class="font-red-thunderbird"> @ViewData.ModelState["Nome"].Errors[0].ErrorMessage</span>
                        }
                    </div>
                    <div class="form-group">
                        <label>Sobrenome</label>
                        <input value="@Model.Sobrenome" type="text" class="form-control" placeholder="Digite seu sobrenome" name="usuario.Sobrenome">
                        @if (ViewData.ModelState.ContainsKey("Sobrenome"))
                        {
                            <span class="font-red-thunderbird"> @ViewData.ModelState["Sobrenome"].Errors[0].ErrorMessage</span>
                        }
                    </div>
                    <div class="row">
                        <div class="form-group col-md-8">
                            <label>Data de Nascimento</label>
                            @{
                                DateTime now = DateTime.Now;
                                string dateMin = $"{now.Year - 80}-{now.Month.ToString("00")}-{now.Day.ToString("00")}";
                                string dateMax = $"{now.Year - 18}-{now.Month.ToString("00")}-{now.Day.ToString("00")}";
                                string dataNasc = Model.DataNascimento != DateTime.MinValue ? Model.DataNascimento.ToString("yyyy-MM-dd") : null;
                            }
                            <input value="@dataNasc" type="date" class="form-control"
                                   min="@dateMin" max="@dateMax" name="usuario.DataNascimento">
                            @if (ViewData.ModelState.ContainsKey("DataNascimento"))
                            {
                                <span class="font-red-thunderbird"> @ViewData.ModelState["DataNascimento"].Errors[0].ErrorMessage</span>
                            }
                        </div>
                        <div class="form-group col-md-4">
                            <div class="" style="float: none; padding: unset;">
                                <label>Gênero</label>
                                <select class="bs-select form-control" style="display: block;" name="usuario.Genero">
                                    @foreach (var item in (Entity.Enums.Genero[])Enum.GetValues(typeof(Entity.Enums.Genero)))
                                    {
                                        int val = (int)item;
                                        string selec = (int)Model.Genero == val ? "selected=\"selected\"" : null;
                                        <option @selec value="@val">@Enum.GetName(item.GetType(), item)</option>
                                    }
                                </select>
                                @if (ViewData.ModelState.ContainsKey("Genero"))
                                {
                                    <span class="font-red-thunderbird"> @ViewData.ModelState["Genero"].Errors[0].ErrorMessage</span>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>E-mail</label>
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-envelope"></i>
                            </span>
                            <input value="@Model.Email" type="email" class="form-control" placeholder="Digite seu E-mail" name="usuario.Email">
                        </div>
                        @if (ViewData.ModelState.ContainsKey("Email"))
                        {
                            <span class="font-red-thunderbird"> @ViewData.ModelState["Email"].Errors[0].ErrorMessage</span>
                        }
                    </div>
                    <div class="form-group">
                        <label>Senha</label>
                        <input value="@Model.Senha" type="password" class="form-control" placeholder="Digite sua senha, que deve conter pelo menos 5 caracteres" name="usuario.Senha">
                        @if (ViewData.ModelState.ContainsKey("Senha"))
                        {
                            <span class="font-red-thunderbird"> @ViewData.ModelState["Senha"].Errors[0].ErrorMessage</span>
                        }
                    </div>
                    <div class="form-group" style="float: none">
                        <label>Confirmar Senha</label>
                        <input type="password" class="form-control" placeholder="Confirme sua senha" name="senhaRepetida">
                    </div>
                    @if (ViewData.ModelState.ContainsKey("SenhasDiferentes"))
                    {
                        <span class="font-red-thunderbird"> @ViewData.ModelState["SenhasDiferentes"].Errors[0].ErrorMessage</span>
                    }
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn purple-customizado default-roxocustomizado btn-circle pull-right">
                        Registrar &thinsp;
                        <i class="icon-login"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
@section  PageLevelPlugins
{
    <script type="text/javascript" src="~/assets/global/plugins/select2/select2.min.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/bootstrap-select/bootstrap-select.min.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/select2/select2.min.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/jquery-multi-select/js/jquery.multi-select.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/jquery-validation/js/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/jquery-validation/js/additional-methods.min.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/select2/select2.min.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/bootstrap-wysihtml5/wysihtml5-0.3.0.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/bootstrap-wysihtml5/bootstrap-wysihtml5.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/ckeditor/ckeditor.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/bootstrap-markdown/js/bootstrap-markdown.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/bootstrap-markdown/lib/markdown.js"></script>
}
@section PageLevelScripts {
    <script src="~/assets/global/scripts/metronic.js" type="text/javascript"></script>
    <script src="~/assets/admin/layout3/scripts/layout.js" type="text/javascript"></script>
    <script src="~/assets/admin/layout3/scripts/demo.js" type="text/javascript"></script>
    <script src="~/assets/admin/pages/scripts/form-samples.js"></script>
    <script src="~/assets/admin/pages/scripts/components-dropdowns.js"></script>
    <script src="~/assets/admin/pages/scripts/form-validation.js"></script>
}
@section JqueryFinal{
    <script>
        jQuery(document).ready(function () {
            Metronic.init(); 
            Layout.init(); 
            Demo.init(); 
            FormSamples.init();
            ComponentsDropdowns.init();
            FormValidation.init();
        });
    </script>
}